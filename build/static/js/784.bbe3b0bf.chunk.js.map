{"version":3,"file":"static/js/784.bbe3b0bf.chunk.js","mappings":"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","sources":["components/header/header.tsx","components/loader/loader.tsx","components/filter/multiSelectDropDown/multiSelectDropDown.tsx","components/filter/search/search.filter.tsx","components/filter/filter.tsx","pages/home/home.page.js"],"sourcesContent":["import React from 'react';\nimport \"./header.scss\";\n\nconst Header: React.FC<{children: React.ReactNode}> = ({ children }) => {\n  return (\n    <header className=\"header\">\n      {children}\n    </header>\n  );\n};\n\nexport default Header;","import React from 'react';\nimport { Loader } from \"rsuite\";\nimport { AppLoaderProps } from \"../../constants/pokemon.types\"\n\n\nconst AppLoader: React.FC<AppLoaderProps> = ({ className }) => {\n    return (\n        <div className={className}>\n            <Loader size=\"md\" content=\"Loading...\" />\n        </div>\n    );\n}\n\nexport default AppLoader;","import React from 'react';\nimport { CheckPicker } from 'rsuite';\nimport \"./multiSelectDropDown.scss\"\nimport { AppMultiSelectDropDownProps } from \"../../../constants/pokemon.types\"\n\nconst AppMultiSelectDropDown: React.FC<AppMultiSelectDropDownProps> = ({\n  label,\n  onChangeHandler,\n  data,\n  ...props\n}) => (\n  <>\n    <div className=\"multiselect-dropdown-wrapper\">\n      <div className='dropdown-label'><span>{label}</span></div>\n      <div className={`${props.isOpen ? \"is-dropdown-open\" : \"\"} check-picker-wrap`}>\n        <CheckPicker\n          block\n          placeholder={props.placeholder}\n          onChange={onChangeHandler}\n          size=\"lg\"\n          onOpen={props.onOpenHandler}\n          onClose={props.onCloseHandler}\n          onClean={props.onCleanHandler}\n          data={data}\n          searchable={false}\n          style={{ width: 224 }}\n        />\n      </div>\n    </div>\n  </>\n);\n\nexport default AppMultiSelectDropDown;","import React from 'react';\nimport \"./search.filter.scss\";\nimport { Input, InputGroup } from 'rsuite';\nimport SearchIcon from '@rsuite/icons/Search';\nimport { SearchFilterProps } from \"../../../constants/pokemon.types\"\n\nconst SearchFilter: React.FC<SearchFilterProps> = ({\n  placeholder,\n  inputClass,\n  onChangeHandler,\n  label,\n  ...props\n}) => {\n  return (\n    <>\n      <div className=\"search-container\">\n        <div className=\"flex-col\">\n          <div className='search-label'><span>{label}</span></div>\n          <InputGroup {...props} inside className=\"mb-1\">\n            <Input\n              placeholder={placeholder}\n              className={inputClass}\n              size=\"lg\"\n              onChange={onChangeHandler}\n            />\n            <InputGroup.Button>\n              <SearchIcon />\n            </InputGroup.Button>\n          </InputGroup>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SearchFilter;","import React, { useContext, useEffect, useState } from 'react';\nimport { Col, Row } from 'rsuite';\nimport { debounceTime, distinctUntilChanged, map, of } from 'rxjs';\nimport { baseURL, SEARCH_SLICED } from '../../constants/apiUrls';\nimport { AppFilterProps } from '../../constants/pokemon.types';\nimport { getCamelCaseString } from '../../constants/utils';\nimport PokemonContext from '../../context/pokemonContext/pokemon.context';\nimport { getAllParallelCall, getPokemonGenders, getPokemonTypes, removeDuplicateBy } from '../../services/common.service';\nimport \"./filter.scss\";\nimport AppMultiSelectDropDown from './multiSelectDropDown/multiSelectDropDown';\nimport SearchFilter from './search/search.filter';\n\nconst AppFilter: React.FC<AppFilterProps> = ({ isFilterEnable }) => {\n    const { state, getPokemonData, dispatch, setAppLoading, getPokemonDetailsListByUrl } = useContext(PokemonContext);\n    const { allPokemonList, pokemonTypes, pokemonGenderList } = state;\n\n    const [isOpenTypeFilter, setIsOpenTypeFilter] = useState<boolean>(false);\n    const [isOpenGenderFilter, setIsOpenGenderFilter] = useState<boolean>(false);\n\n    let data$ = of([]);\n\n    const onOpenTypeHandler = () => {\n        setIsOpenTypeFilter(true);\n    }\n    const onCloseTypeHandler = () => {\n        setIsOpenTypeFilter(false);\n    }\n\n    const onOpenGenderHandler = () => {\n        setIsOpenGenderFilter(true);\n    }\n    const onCloseGenderHandler = () => {\n        setIsOpenGenderFilter(false);\n    }\n\n    const onCleanTypeHandler = (event: React.SyntheticEvent) => {\n        if (event) {\n            isFilterEnable(false);\n        }\n    }\n\n    const onSearchChangeHandler = (value: string, event: React.SyntheticEvent) => {\n        event.preventDefault();\n        value = value.trim();\n        setAppLoading(true);\n        if (value.length) {\n            isFilterEnable(true);\n            data$ = of(allPokemonList).pipe(debounceTime(4000),\n                distinctUntilChanged(), map((pokemon) => {\n                    return pokemon.filter((item: { name: string; }) => item.name.toLowerCase().indexOf(value.toLowerCase()) > -1)\n                })\n            );\n        } else {\n            filterPokemonData([]);\n            getPokemonData(true);\n            isFilterEnable(false);\n        }\n\n        data$.subscribe(pokemonList => {\n            if (pokemonList.length > SEARCH_SLICED) {\n                pokemonList = pokemonList.slice(0, SEARCH_SLICED)\n            }\n            getPokemonDetailsListByUrl(pokemonList).then((res: any[]) => { filterPokemonData(res) });\n        });\n        setAppLoading(false);\n    }\n\n    const onTypeChangeHandler = (value: string[], event: React.SyntheticEvent) => {\n        event.preventDefault();\n        if (value.length) {\n            isFilterEnable(true);\n            getAllParallelCall(value).then(pokemonList => {\n                pokemonList = pokemonList.map((res: any) => res.pokemon);\n                pokemonList = pokemonList.flat().map((res: any) => res.pokemon);\n                pokemonList = removeDuplicateBy(pokemonList, 'name');\n                if (pokemonList.length > SEARCH_SLICED) {\n                    pokemonList = pokemonList.slice(-SEARCH_SLICED)\n                }\n                getPokemonDetailsListByUrl(pokemonList).then((res: any[]) => { filterPokemonData(res) });\n            }).catch(err => console.error(err));\n        } else {\n            filterPokemonData([]);\n            getPokemonData(true);\n            isFilterEnable(false);\n        }\n    }\n\n    const onGenderChangeHandler = (value: string[], event: React.SyntheticEvent) => {\n        event.preventDefault();\n        if (value.length) {\n            isFilterEnable(true);\n            getAllParallelCall(value).then(pokemonList => {\n                pokemonList = pokemonList.map((res: any) => res.pokemon_species_details).flat();\n                pokemonList = pokemonList.map((res: any) => baseURL + \"/pokemon\" + res.pokemon_species.url.split(\"pokemon-species\")[1]);\n                pokemonList = [...new Set(pokemonList)]\n                if (pokemonList.length > SEARCH_SLICED) {\n                    pokemonList = [...pokemonList.slice(0, SEARCH_SLICED), ...pokemonList.slice(-SEARCH_SLICED)]\n                }\n                pokemonList = pokemonList.map((res: any) => ({ url: res }));\n                getPokemonDetailsListByUrl(pokemonList).then((res: any[]) => { filterPokemonData(res) });\n            }).catch(err => console.error(err));\n        } else {\n            filterPokemonData([]);\n            getPokemonData(true);\n            isFilterEnable(false);\n        }\n    }\n\n    const filterPokemonData = (data: any[]) => {\n        dispatch({\n            type: \"ACTIONS.SET_FILTERED_POKEMON_LIST\",\n            payload: data\n        });\n    }\n\n    const setPokemonTypes = (data: any[]) => {\n        if (data.length) {\n            data = data.map(item => ({ label: getCamelCaseString(item.name), value: item.url, url: item.url }));\n            dispatch({\n                type: \"ACTIONS.SET_POKEMON_TYPE\",\n                payload: data\n            });\n        } else {\n            dispatch({\n                type: \"ACTIONS.SET_POKEMON_TYPE\",\n                payload: []\n            });\n        }\n    }\n\n    const setPokemonGendersList = (genderList: any[]) => {\n        genderList = genderList.map(item => ({ label: getCamelCaseString(item.name), value: item.url, url: item.url }));\n        if (genderList.length) {\n            dispatch({\n                type: \"ACTIONS.SET_POKEMON_GENDER_LIST\",\n                payload: genderList\n            });\n        } else {\n            dispatch({\n                type: \"ACTIONS.SET_POKEMON_GENDER_LIST\",\n                payload: []\n            });\n        }\n    }\n\n    const getAllPokemonType = async () => {\n        getPokemonTypes().then((res: any) => {\n            setPokemonTypes(res.results);\n        }).catch(err => {\n            console.error(err);\n        });\n    }\n\n    const getPokemonGendersList = async () => {\n        getPokemonGenders().then((res: any) => {\n            setPokemonGendersList(res.results);\n        }).catch(err => {\n            console.error(err);\n        });\n    }\n\n    useEffect(() => {\n        getAllPokemonType();\n        getPokemonGendersList();\n    }, []);\n\n    return (\n        <>\n            <div className=\"filter-container\">\n                <div className=\"filter-wrap\">\n                    <Row className=\"filter-row-wrap show-grid\">\n                        <Col lg={16} xl={16} xs={24} sm={24}>\n                            <div>\n                                <SearchFilter\n                                    placeholder=\"Name or Number\" inputClass=\"pokemon-search-filter\" label=\"Search By\"\n                                    onChangeHandler={onSearchChangeHandler} />\n                            </div>\n                        </Col>\n                        <Col lg={4} xl={4} xs={24} sm={24}>\n                            <div>\n                                <AppMultiSelectDropDown\n                                    placeholder=\"Select Types\"\n                                    isOpen={isOpenTypeFilter}\n                                    data={pokemonTypes}\n                                    label=\"Type\"\n                                    onChangeHandler={onTypeChangeHandler} onOpenHandler={onOpenTypeHandler} onCloseHandler={onCloseTypeHandler} onCleanHandler={onCleanTypeHandler}\n                                />\n                            </div>\n                        </Col>\n                        <Col lg={4} xl={4} xs={24} sm={24}>\n                            <div>\n                                <AppMultiSelectDropDown\n                                    placeholder=\"Select Gender\"\n                                    isOpen={isOpenGenderFilter} data={pokemonGenderList} label=\"Gender\" onChangeHandler={onGenderChangeHandler} onOpenHandler={onOpenGenderHandler} onCloseHandler={onCloseGenderHandler} />\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n            </div>\n        </>\n    )\n};\n\nexport default AppFilter;","import React, { useContext, useMemo, useState } from \"react\";\nimport Header from \"../../components/header/header\";\nimport \"./home.scss\";\nimport \"../../styles/common.scss\";\nimport PokemonCard from \"../../components/pokemonCard/pokemonCard\";\nimport AppLoader from \"../../components/loader/loader\";\nimport PokemonContext from \"../../context/pokemonContext/pokemon.context\";\nimport DetailPage from \"../details/details.page\";\nimport { Button, Col, Row } from \"rsuite\";\nimport AppFilter from \"../../components/filter/filter\";\n\n\nconst HomePage = () => {\n  const [isCardSelected, setToggleSelect] = useState(false);\n  const [pokemonId, setPokemonId] = useState();\n  const [isFilterEnable, setIsFilterEnable] = useState(false);\n\n\n  const { state, getPokemonData } = useContext(PokemonContext);\n  const { pokemonList, isLoading, isLoadMoreInprogress } = state;\n\n  const pokemonListView = useMemo(\n  () =>\n    pokemonList?.map((data, index) => (\n      <div key={`${data.id}-${index}`} className=\"responsive\">\n        <PokemonCard key={data.id} data={data} onClick={() => {\n          setPokemonId(data.id);\n          toggleModal();\n        }} />\n      </div>\n    )),\n  [pokemonList]\n);\n\n  const handleLoadMoreClick = () => {\n    getPokemonData();\n  }\n\n  const toggleModal = () => {\n    setToggleSelect((prevState) => !prevState);\n  }\n\n  const isFilterEnableHandler = (isEnable) => {\n    setIsFilterEnable(isEnable);\n  }\n\n  return (\n    <>\n      <div className=\"home-container\">\n        <div>\n          <Header className=\"header-container\">\n            <Row lg={24} xl={24} className=\"app-header-wrap show-grid\">\n              <Col xs={12} sm={12} lg={5} xl={5}>\n                <div className=\"header-title\">\n                  <h3>Pokédex</h3>\n                </div>\n              </Col>\n              <Col xs={12} sm={12} lg={2} xl={2} className=\"hide\">\n                <div className=\"header-horizontal-line\"></div>\n              </Col>\n              <Col xs={24} sm={24} lg={20} xl={20}>\n                <div className=\"subheading\">\n                  <span>Search for any Pokémon that exist on the planet</span>\n                </div>\n              </Col>\n            </Row>\n\n          </Header>\n          <div>\n            <AppFilter  isFilterEnable={isFilterEnableHandler} />\n          </div>\n        </div>\n        {pokemonList.length > 0 && (<div>\n          <div className=\"card-list\">\n            {pokemonListView}\n          </div>\n          <div>\n            {isLoadMoreInprogress && <AppLoader className=\"loadmore-loader\" />}\n          </div>\n          {!isFilterEnable && (\n            <div className=\"load-more-wrap\">\n              <Button appearance=\"link\" onClick={handleLoadMoreClick} >Load more </Button>\n            </div>\n          )}\n        </div>)}\n        {(!pokemonList.length) && (\n          <div className=\"no-data-found\"><span>No data found</span></div>\n        )}\n        {isLoading && (\n          <AppLoader className=\"app-loader-wrapper\" />\n        )}\n        <div>\n          {isCardSelected && (<DetailPage isCardSelected={isCardSelected} toggleModal={toggleModal} pokemonId={pokemonId} offset={pokemonList.length} />)}\n        </div>\n      </div>\n    </>\n  )\n}\n\n\nexport default HomePage;"],"names":["_ref","children","_jsx","className","Loader","size","content","label","onChangeHandler","data","props","_objectWithoutProperties","_excluded","_Fragment","_jsxs","concat","isOpen","CheckPicker","block","placeholder","onChange","onOpen","onOpenHandler","onClose","onCloseHandler","onClean","onCleanHandler","searchable","style","width","inputClass","InputGroup","_objectSpread","inside","Input","Button","SearchIcon","isFilterEnable","state","getPokemonData","dispatch","setAppLoading","getPokemonDetailsListByUrl","useContext","PokemonContext","allPokemonList","pokemonTypes","pokemonGenderList","isOpenTypeFilter","setIsOpenTypeFilter","useState","isOpenGenderFilter","setIsOpenGenderFilter","data$","of","filterPokemonData","type","payload","getAllPokemonType","async","getPokemonTypes","then","res","results","length","map","item","getCamelCaseString","name","value","url","catch","err","console","error","getPokemonGendersList","getPokemonGenders","genderList","useEffect","Row","Col","lg","xl","xs","sm","SearchFilter","onSearchChangeHandler","event","preventDefault","trim","pipe","debounceTime","distinctUntilChanged","pokemon","filter","toLowerCase","indexOf","subscribe","pokemonList","SEARCH_SLICED","slice","AppMultiSelectDropDown","onTypeChangeHandler","getAllParallelCall","flat","removeDuplicateBy","onOpenTypeHandler","onCloseTypeHandler","onGenderChangeHandler","pokemon_species_details","baseURL","pokemon_species","split","Set","onOpenGenderHandler","onCloseGenderHandler","HomePage","isCardSelected","setToggleSelect","pokemonId","setPokemonId","setIsFilterEnable","isLoading","isLoadMoreInprogress","pokemonListView","useMemo","index","PokemonCard","onClick","id","toggleModal","prevState","Header","AppFilter","isEnable","AppLoader","appearance","handleLoadMoreClick","DetailPage","offset"],"sourceRoot":""}